[{"flatMessage":"Property 'number' does not exist on type 'IntrinsicAttributes & IntrinsicClassAttributes<Blind> & Readonly<{ children?: ReactNode; }> & Rea...'.","formatted":"\nsrc/public/blinds.tsx(113,21): \u001b[91merror\u001b[0m TS2339: Property 'number' does not exist on type 'IntrinsicAttributes & IntrinsicClassAttributes<Blind> & Readonly<{ children?: ReactNode; }> & Rea...'.\n\n\u001b[30;47m113\u001b[0m                     number = { data.id }\n\u001b[30;47m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(149,20): \u001b[91merror\u001b[0m TS2339: Property 'number' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m149\u001b[0m         this.props.number % 2 === 0\n\u001b[30;47m   \u001b[0m \u001b[91m                   ~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(154,24): \u001b[91merror\u001b[0m TS2339: Property 'active' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m154\u001b[0m         if (this.props.active) {\n\u001b[30;47m   \u001b[0m \u001b[91m                       ~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(156,24): \u001b[91merror\u001b[0m TS2339: Property 'selected' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m156\u001b[0m             this.props.selected ? activeStyle = this.state.selected : activeStyle = this.state.off;\n\u001b[30;47m   \u001b[0m \u001b[91m                       ~~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(156,60): \u001b[91merror\u001b[0m TS2339: Property 'selected' does not exist on type 'Readonly<{}>'.\n\n\u001b[30;47m156\u001b[0m             this.props.selected ? activeStyle = this.state.selected : activeStyle = this.state.off;\n\u001b[30;47m   \u001b[0m \u001b[91m                                                           ~~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(156,96): \u001b[91merror\u001b[0m TS2339: Property 'off' does not exist on type 'Readonly<{}>'.\n\n\u001b[30;47m156\u001b[0m             this.props.selected ? activeStyle = this.state.selected : activeStyle = this.state.off;\n\u001b[30;47m   \u001b[0m \u001b[91m                                                                                               ~~~\u001b[0m\n\nsrc/public/blinds.tsx(163,40): \u001b[91merror\u001b[0m TS2339: Property 'onClick' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m163\u001b[0m                 onClick = { this.props.onClick }\n\u001b[30;47m   \u001b[0m \u001b[91m                                       ~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(165,34): \u001b[91merror\u001b[0m TS2339: Property 'content' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m165\u001b[0m                 <h1>{ this.props.content } </h1>\n\u001b[30;47m   \u001b[0m \u001b[91m                                 ~~~~~~~\u001b[0m\n","category":1,"code":2339,"type":"semantic","fileLine":"/Users/juliantheberge/Documents/one-pager/src/public/blinds.tsx(113,21)"},{"flatMessage":"Property 'number' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.","formatted":"\nsrc/public/blinds.tsx(113,21): \u001b[91merror\u001b[0m TS2339: Property 'number' does not exist on type 'IntrinsicAttributes & IntrinsicClassAttributes<Blind> & Readonly<{ children?: ReactNode; }> & Rea...'.\n\n\u001b[30;47m113\u001b[0m                     number = { data.id }\n\u001b[30;47m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(149,20): \u001b[91merror\u001b[0m TS2339: Property 'number' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m149\u001b[0m         this.props.number % 2 === 0\n\u001b[30;47m   \u001b[0m \u001b[91m                   ~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(154,24): \u001b[91merror\u001b[0m TS2339: Property 'active' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m154\u001b[0m         if (this.props.active) {\n\u001b[30;47m   \u001b[0m \u001b[91m                       ~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(156,24): \u001b[91merror\u001b[0m TS2339: Property 'selected' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m156\u001b[0m             this.props.selected ? activeStyle = this.state.selected : activeStyle = this.state.off;\n\u001b[30;47m   \u001b[0m \u001b[91m                       ~~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(156,60): \u001b[91merror\u001b[0m TS2339: Property 'selected' does not exist on type 'Readonly<{}>'.\n\n\u001b[30;47m156\u001b[0m             this.props.selected ? activeStyle = this.state.selected : activeStyle = this.state.off;\n\u001b[30;47m   \u001b[0m \u001b[91m                                                           ~~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(156,96): \u001b[91merror\u001b[0m TS2339: Property 'off' does not exist on type 'Readonly<{}>'.\n\n\u001b[30;47m156\u001b[0m             this.props.selected ? activeStyle = this.state.selected : activeStyle = this.state.off;\n\u001b[30;47m   \u001b[0m \u001b[91m                                                                                               ~~~\u001b[0m\n\nsrc/public/blinds.tsx(163,40): \u001b[91merror\u001b[0m TS2339: Property 'onClick' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m163\u001b[0m                 onClick = { this.props.onClick }\n\u001b[30;47m   \u001b[0m \u001b[91m                                       ~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(165,34): \u001b[91merror\u001b[0m TS2339: Property 'content' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m165\u001b[0m                 <h1>{ this.props.content } </h1>\n\u001b[30;47m   \u001b[0m \u001b[91m                                 ~~~~~~~\u001b[0m\n","category":1,"code":2339,"type":"semantic","fileLine":"/Users/juliantheberge/Documents/one-pager/src/public/blinds.tsx(149,20)"},{"flatMessage":"Property 'active' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.","formatted":"\nsrc/public/blinds.tsx(113,21): \u001b[91merror\u001b[0m TS2339: Property 'number' does not exist on type 'IntrinsicAttributes & IntrinsicClassAttributes<Blind> & Readonly<{ children?: ReactNode; }> & Rea...'.\n\n\u001b[30;47m113\u001b[0m                     number = { data.id }\n\u001b[30;47m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(149,20): \u001b[91merror\u001b[0m TS2339: Property 'number' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m149\u001b[0m         this.props.number % 2 === 0\n\u001b[30;47m   \u001b[0m \u001b[91m                   ~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(154,24): \u001b[91merror\u001b[0m TS2339: Property 'active' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m154\u001b[0m         if (this.props.active) {\n\u001b[30;47m   \u001b[0m \u001b[91m                       ~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(156,24): \u001b[91merror\u001b[0m TS2339: Property 'selected' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m156\u001b[0m             this.props.selected ? activeStyle = this.state.selected : activeStyle = this.state.off;\n\u001b[30;47m   \u001b[0m \u001b[91m                       ~~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(156,60): \u001b[91merror\u001b[0m TS2339: Property 'selected' does not exist on type 'Readonly<{}>'.\n\n\u001b[30;47m156\u001b[0m             this.props.selected ? activeStyle = this.state.selected : activeStyle = this.state.off;\n\u001b[30;47m   \u001b[0m \u001b[91m                                                           ~~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(156,96): \u001b[91merror\u001b[0m TS2339: Property 'off' does not exist on type 'Readonly<{}>'.\n\n\u001b[30;47m156\u001b[0m             this.props.selected ? activeStyle = this.state.selected : activeStyle = this.state.off;\n\u001b[30;47m   \u001b[0m \u001b[91m                                                                                               ~~~\u001b[0m\n\nsrc/public/blinds.tsx(163,40): \u001b[91merror\u001b[0m TS2339: Property 'onClick' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m163\u001b[0m                 onClick = { this.props.onClick }\n\u001b[30;47m   \u001b[0m \u001b[91m                                       ~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(165,34): \u001b[91merror\u001b[0m TS2339: Property 'content' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m165\u001b[0m                 <h1>{ this.props.content } </h1>\n\u001b[30;47m   \u001b[0m \u001b[91m                                 ~~~~~~~\u001b[0m\n","category":1,"code":2339,"type":"semantic","fileLine":"/Users/juliantheberge/Documents/one-pager/src/public/blinds.tsx(154,24)"},{"flatMessage":"Property 'selected' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.","formatted":"\nsrc/public/blinds.tsx(113,21): \u001b[91merror\u001b[0m TS2339: Property 'number' does not exist on type 'IntrinsicAttributes & IntrinsicClassAttributes<Blind> & Readonly<{ children?: ReactNode; }> & Rea...'.\n\n\u001b[30;47m113\u001b[0m                     number = { data.id }\n\u001b[30;47m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(149,20): \u001b[91merror\u001b[0m TS2339: Property 'number' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m149\u001b[0m         this.props.number % 2 === 0\n\u001b[30;47m   \u001b[0m \u001b[91m                   ~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(154,24): \u001b[91merror\u001b[0m TS2339: Property 'active' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m154\u001b[0m         if (this.props.active) {\n\u001b[30;47m   \u001b[0m \u001b[91m                       ~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(156,24): \u001b[91merror\u001b[0m TS2339: Property 'selected' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m156\u001b[0m             this.props.selected ? activeStyle = this.state.selected : activeStyle = this.state.off;\n\u001b[30;47m   \u001b[0m \u001b[91m                       ~~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(156,60): \u001b[91merror\u001b[0m TS2339: Property 'selected' does not exist on type 'Readonly<{}>'.\n\n\u001b[30;47m156\u001b[0m             this.props.selected ? activeStyle = this.state.selected : activeStyle = this.state.off;\n\u001b[30;47m   \u001b[0m \u001b[91m                                                           ~~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(156,96): \u001b[91merror\u001b[0m TS2339: Property 'off' does not exist on type 'Readonly<{}>'.\n\n\u001b[30;47m156\u001b[0m             this.props.selected ? activeStyle = this.state.selected : activeStyle = this.state.off;\n\u001b[30;47m   \u001b[0m \u001b[91m                                                                                               ~~~\u001b[0m\n\nsrc/public/blinds.tsx(163,40): \u001b[91merror\u001b[0m TS2339: Property 'onClick' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m163\u001b[0m                 onClick = { this.props.onClick }\n\u001b[30;47m   \u001b[0m \u001b[91m                                       ~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(165,34): \u001b[91merror\u001b[0m TS2339: Property 'content' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m165\u001b[0m                 <h1>{ this.props.content } </h1>\n\u001b[30;47m   \u001b[0m \u001b[91m                                 ~~~~~~~\u001b[0m\n","category":1,"code":2339,"type":"semantic","fileLine":"/Users/juliantheberge/Documents/one-pager/src/public/blinds.tsx(156,24)"},{"flatMessage":"Property 'selected' does not exist on type 'Readonly<{}>'.","formatted":"\nsrc/public/blinds.tsx(113,21): \u001b[91merror\u001b[0m TS2339: Property 'number' does not exist on type 'IntrinsicAttributes & IntrinsicClassAttributes<Blind> & Readonly<{ children?: ReactNode; }> & Rea...'.\n\n\u001b[30;47m113\u001b[0m                     number = { data.id }\n\u001b[30;47m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(149,20): \u001b[91merror\u001b[0m TS2339: Property 'number' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m149\u001b[0m         this.props.number % 2 === 0\n\u001b[30;47m   \u001b[0m \u001b[91m                   ~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(154,24): \u001b[91merror\u001b[0m TS2339: Property 'active' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m154\u001b[0m         if (this.props.active) {\n\u001b[30;47m   \u001b[0m \u001b[91m                       ~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(156,24): \u001b[91merror\u001b[0m TS2339: Property 'selected' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m156\u001b[0m             this.props.selected ? activeStyle = this.state.selected : activeStyle = this.state.off;\n\u001b[30;47m   \u001b[0m \u001b[91m                       ~~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(156,60): \u001b[91merror\u001b[0m TS2339: Property 'selected' does not exist on type 'Readonly<{}>'.\n\n\u001b[30;47m156\u001b[0m             this.props.selected ? activeStyle = this.state.selected : activeStyle = this.state.off;\n\u001b[30;47m   \u001b[0m \u001b[91m                                                           ~~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(156,96): \u001b[91merror\u001b[0m TS2339: Property 'off' does not exist on type 'Readonly<{}>'.\n\n\u001b[30;47m156\u001b[0m             this.props.selected ? activeStyle = this.state.selected : activeStyle = this.state.off;\n\u001b[30;47m   \u001b[0m \u001b[91m                                                                                               ~~~\u001b[0m\n\nsrc/public/blinds.tsx(163,40): \u001b[91merror\u001b[0m TS2339: Property 'onClick' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m163\u001b[0m                 onClick = { this.props.onClick }\n\u001b[30;47m   \u001b[0m \u001b[91m                                       ~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(165,34): \u001b[91merror\u001b[0m TS2339: Property 'content' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m165\u001b[0m                 <h1>{ this.props.content } </h1>\n\u001b[30;47m   \u001b[0m \u001b[91m                                 ~~~~~~~\u001b[0m\n","category":1,"code":2339,"type":"semantic","fileLine":"/Users/juliantheberge/Documents/one-pager/src/public/blinds.tsx(156,60)"},{"flatMessage":"Property 'off' does not exist on type 'Readonly<{}>'.","formatted":"\nsrc/public/blinds.tsx(113,21): \u001b[91merror\u001b[0m TS2339: Property 'number' does not exist on type 'IntrinsicAttributes & IntrinsicClassAttributes<Blind> & Readonly<{ children?: ReactNode; }> & Rea...'.\n\n\u001b[30;47m113\u001b[0m                     number = { data.id }\n\u001b[30;47m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(149,20): \u001b[91merror\u001b[0m TS2339: Property 'number' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m149\u001b[0m         this.props.number % 2 === 0\n\u001b[30;47m   \u001b[0m \u001b[91m                   ~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(154,24): \u001b[91merror\u001b[0m TS2339: Property 'active' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m154\u001b[0m         if (this.props.active) {\n\u001b[30;47m   \u001b[0m \u001b[91m                       ~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(156,24): \u001b[91merror\u001b[0m TS2339: Property 'selected' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m156\u001b[0m             this.props.selected ? activeStyle = this.state.selected : activeStyle = this.state.off;\n\u001b[30;47m   \u001b[0m \u001b[91m                       ~~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(156,60): \u001b[91merror\u001b[0m TS2339: Property 'selected' does not exist on type 'Readonly<{}>'.\n\n\u001b[30;47m156\u001b[0m             this.props.selected ? activeStyle = this.state.selected : activeStyle = this.state.off;\n\u001b[30;47m   \u001b[0m \u001b[91m                                                           ~~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(156,96): \u001b[91merror\u001b[0m TS2339: Property 'off' does not exist on type 'Readonly<{}>'.\n\n\u001b[30;47m156\u001b[0m             this.props.selected ? activeStyle = this.state.selected : activeStyle = this.state.off;\n\u001b[30;47m   \u001b[0m \u001b[91m                                                                                               ~~~\u001b[0m\n\nsrc/public/blinds.tsx(163,40): \u001b[91merror\u001b[0m TS2339: Property 'onClick' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m163\u001b[0m                 onClick = { this.props.onClick }\n\u001b[30;47m   \u001b[0m \u001b[91m                                       ~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(165,34): \u001b[91merror\u001b[0m TS2339: Property 'content' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m165\u001b[0m                 <h1>{ this.props.content } </h1>\n\u001b[30;47m   \u001b[0m \u001b[91m                                 ~~~~~~~\u001b[0m\n","category":1,"code":2339,"type":"semantic","fileLine":"/Users/juliantheberge/Documents/one-pager/src/public/blinds.tsx(156,96)"},{"flatMessage":"Property 'onClick' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.","formatted":"\nsrc/public/blinds.tsx(113,21): \u001b[91merror\u001b[0m TS2339: Property 'number' does not exist on type 'IntrinsicAttributes & IntrinsicClassAttributes<Blind> & Readonly<{ children?: ReactNode; }> & Rea...'.\n\n\u001b[30;47m113\u001b[0m                     number = { data.id }\n\u001b[30;47m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(149,20): \u001b[91merror\u001b[0m TS2339: Property 'number' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m149\u001b[0m         this.props.number % 2 === 0\n\u001b[30;47m   \u001b[0m \u001b[91m                   ~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(154,24): \u001b[91merror\u001b[0m TS2339: Property 'active' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m154\u001b[0m         if (this.props.active) {\n\u001b[30;47m   \u001b[0m \u001b[91m                       ~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(156,24): \u001b[91merror\u001b[0m TS2339: Property 'selected' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m156\u001b[0m             this.props.selected ? activeStyle = this.state.selected : activeStyle = this.state.off;\n\u001b[30;47m   \u001b[0m \u001b[91m                       ~~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(156,60): \u001b[91merror\u001b[0m TS2339: Property 'selected' does not exist on type 'Readonly<{}>'.\n\n\u001b[30;47m156\u001b[0m             this.props.selected ? activeStyle = this.state.selected : activeStyle = this.state.off;\n\u001b[30;47m   \u001b[0m \u001b[91m                                                           ~~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(156,96): \u001b[91merror\u001b[0m TS2339: Property 'off' does not exist on type 'Readonly<{}>'.\n\n\u001b[30;47m156\u001b[0m             this.props.selected ? activeStyle = this.state.selected : activeStyle = this.state.off;\n\u001b[30;47m   \u001b[0m \u001b[91m                                                                                               ~~~\u001b[0m\n\nsrc/public/blinds.tsx(163,40): \u001b[91merror\u001b[0m TS2339: Property 'onClick' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m163\u001b[0m                 onClick = { this.props.onClick }\n\u001b[30;47m   \u001b[0m \u001b[91m                                       ~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(165,34): \u001b[91merror\u001b[0m TS2339: Property 'content' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m165\u001b[0m                 <h1>{ this.props.content } </h1>\n\u001b[30;47m   \u001b[0m \u001b[91m                                 ~~~~~~~\u001b[0m\n","category":1,"code":2339,"type":"semantic","fileLine":"/Users/juliantheberge/Documents/one-pager/src/public/blinds.tsx(163,40)"},{"flatMessage":"Property 'content' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.","formatted":"\nsrc/public/blinds.tsx(113,21): \u001b[91merror\u001b[0m TS2339: Property 'number' does not exist on type 'IntrinsicAttributes & IntrinsicClassAttributes<Blind> & Readonly<{ children?: ReactNode; }> & Rea...'.\n\n\u001b[30;47m113\u001b[0m                     number = { data.id }\n\u001b[30;47m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(149,20): \u001b[91merror\u001b[0m TS2339: Property 'number' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m149\u001b[0m         this.props.number % 2 === 0\n\u001b[30;47m   \u001b[0m \u001b[91m                   ~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(154,24): \u001b[91merror\u001b[0m TS2339: Property 'active' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m154\u001b[0m         if (this.props.active) {\n\u001b[30;47m   \u001b[0m \u001b[91m                       ~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(156,24): \u001b[91merror\u001b[0m TS2339: Property 'selected' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m156\u001b[0m             this.props.selected ? activeStyle = this.state.selected : activeStyle = this.state.off;\n\u001b[30;47m   \u001b[0m \u001b[91m                       ~~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(156,60): \u001b[91merror\u001b[0m TS2339: Property 'selected' does not exist on type 'Readonly<{}>'.\n\n\u001b[30;47m156\u001b[0m             this.props.selected ? activeStyle = this.state.selected : activeStyle = this.state.off;\n\u001b[30;47m   \u001b[0m \u001b[91m                                                           ~~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(156,96): \u001b[91merror\u001b[0m TS2339: Property 'off' does not exist on type 'Readonly<{}>'.\n\n\u001b[30;47m156\u001b[0m             this.props.selected ? activeStyle = this.state.selected : activeStyle = this.state.off;\n\u001b[30;47m   \u001b[0m \u001b[91m                                                                                               ~~~\u001b[0m\n\nsrc/public/blinds.tsx(163,40): \u001b[91merror\u001b[0m TS2339: Property 'onClick' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m163\u001b[0m                 onClick = { this.props.onClick }\n\u001b[30;47m   \u001b[0m \u001b[91m                                       ~~~~~~~\u001b[0m\n\nsrc/public/blinds.tsx(165,34): \u001b[91merror\u001b[0m TS2339: Property 'content' does not exist on type 'Readonly<{ children?: ReactNode; }> & Readonly<{}>'.\n\n\u001b[30;47m165\u001b[0m                 <h1>{ this.props.content } </h1>\n\u001b[30;47m   \u001b[0m \u001b[91m                                 ~~~~~~~\u001b[0m\n","category":1,"code":2339,"type":"semantic","fileLine":"/Users/juliantheberge/Documents/one-pager/src/public/blinds.tsx(165,34)"}]
